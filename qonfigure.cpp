#include "qonfigure.h"
#include "ui_qonfigure.h"

Qonfigure::Qonfigure(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::Qonfigure)
{
    ui->setupUi(this);

    m_pages.append(new myTabPage(this));
    ui->devices->addTab(m_pages[0], "Device 1");
    m_pages.append(new myTabPage(this));
    ui->devices->addTab(m_pages[1], "Device 2");
    m_pages.append(new myTabPage(this));
    ui->devices->addTab(m_pages[2], "Device 3");
    m_pages.append(new myTabPage(this));
    ui->devices->addTab(m_pages[3], "Device 4");

    sd = new SelectDevices(this);
}

Qonfigure::~Qonfigure()
{
    delete ui;
}

void Qonfigure::on_actionSave_triggered()
{
    if (!sd->exec())
        return;

    QList<bool> dev = sd->give();

    QString fname = filename;

    if (fname=="")
        fname = QFileDialog::getSaveFileName(this, "Save header file", QDir::homePath()+"/timerconfig.h", "Header Files (*.h)");
    else
        fname = QFileDialog::getSaveFileName(this, "Save header file", fname, "Header Files (*.h)");

    if (fname=="")
        return;

    QFile file ( fname );
    filename = fname;

    QString outString;
    QTextStream out (&outString);
    out << "/************************Automatically generated by Qonfigure 0.1****************************/\n\n";

    QStringList prefix;
    prefix << "ONE" << "TWO" << "THREE" << "FOUR";

    QMap<QString, QString> f;
    QMap<QString, timerField*> t;
    QString later="";

    for (int i=0; i<4; i++) {
        if (!dev[i]) continue;
        QString n = prefix.at(i);

        /* Common */
        out << "/*********DEVICE " << i+1 << "************/\n";
        out << "#define DEV_" << n << "_Device_ID\t\t\t\"" << m_pages[i]->getDevice_ID() << "\"\n";
        out << "#define DEV_" << n << "_Model\t\t\t\t\"" << m_pages[i]->getModel() << "\"\n";

        QStringList labels;
        labels << "CommonSignal" << "xvalue4" << "xvalue5" << "yvalue4" << "yvalue5" << "COMMON_SIGNAL_LENGTH" << "CMD_SIGNAL_LENGTH";
        f = m_pages[i]->getCommonBox();
        for (int j=0; j<labels.size(); j++)
            out << "#define DEV_" << n << "_" << labels[j] << "\t\t\t" << f[labels[j]] << "\n";

        /* Timers */
        labels = QStringList();
        labels << "burstOn" << "burstOff" << "onPeriod" << "offPeriodZero" << "offPeriodOne" << "WRONGBIT" << "FLIPBIT";
        QString var;
        t = m_pages[i]->getTimerBox();
        for (int j=0; j<labels.size(); j++) {
            QStringList highlow;
            highlow << "High" << "Low";
            timerField* tf = t[labels[j]];

            foreach (QString hl, highlow) {
                var = "T3_"+tf->time+"_"+hl.toUpper();
                if (labels[j]=="WRONGBIT" || labels[j]=="FLIPBIT") {
                    out << "#define DEV_" << n << "_" << labels[j] << "_" << hl.toUpper() << "\t\t\t" << var << "\n";
                }
                else {
                    out << "#define DEV_" << n << "_" << labels[j] << hl << "\t\t\t" << var << "\n";
                }

                if (hl=="High") {
                    if ( !later.contains(var) )
                        later += "#define " + var + "\t\t\t" + tf->high + "\n";
                    else if ( !later.contains(var + "\t\t\t" + tf->high + "\n") ) {
                        QMessageBox::critical (this, "Qonfigure", "Multiple definitions of "+var);
                        return;
                    }
                }
                else {
                    if ( !later.contains(var) )
                        later += "#define " + var + "\t\t\t" + tf->low + "\n";
                    else if ( !later.contains(var + "\t\t\t" + tf->low + "\n") ) {
                        QMessageBox::critical (this, "Qonfigure", "Multiple definitions of "+var);
                        return;
                    }
                }
            }
        }
        out << "\n";

        /* Misc */
        labels = QStringList();
        labels << "REPEAT_XP" << "REPEAT_XM" << "REPEAT_YP" << "REPEAT_YM" << "FLIP_POSITION_IN_DATA1"
                << "FLIP_POSITION_IN_DATA2" << "FLIP_POSITION_IN_DATA3" << "WRONG_POSITION_IN_DATA1";
        f = m_pages[i]->getMiscBox();
        for (int j=0; j<labels.size(); j++)
            out << "#define DEV_" << n << "_" << labels[j] << "\t\t\t" << f[labels[j]] << "\n";

        out << "\n";
    }

    out << "/*****Timer settings*******/\n" << later;

    if ( !file.open(QIODevice::WriteOnly | QIODevice::Text) ) {
        QMessageBox::critical (this, "Qonfigure", "Error opening file for writing.");
        return;
    }
    QTextStream fileOut(&file);
    fileOut << outString << "\n";
    file.close();
}

void Qonfigure::on_actionPrevTab_triggered()
{
    int curr = ui->devices->currentIndex();
    if (curr>0)
        ui->devices->setCurrentIndex(curr-1);
    else
        ui->devices->setCurrentIndex(3);
}

void Qonfigure::on_actionPrevGroup_triggered()
{
    m_pages[ui->devices->currentIndex()]->on_actionPrevGroup_triggered();
}

void Qonfigure::on_actionNextGroup_triggered()
{
    m_pages[ui->devices->currentIndex()]->on_actionNextGroup_triggered();
}

void Qonfigure::on_actionNextTab_triggered()
{
    ui->devices->setCurrentIndex( (ui->devices->currentIndex()+1)%4 );
}
